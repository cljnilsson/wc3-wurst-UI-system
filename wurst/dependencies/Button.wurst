package Button

import Generate
import HashMap
import LinkedListModule

public HashMap<unit, Button> hash = new HashMap<unit, Button>()

public enum buttonTypes
    OK
    BLOOD_MAGE
    PALADIN
    BLADEMASTER
    WARDEN
    HOLY_LIGHT
    BLIZZARD
    WATER_ELEMENTAL

public function buttonTypes.getType() returns integer
    switch this
        case BLOOD_MAGE
            return bloodmage_id
        case PALADIN
            return paladin_id
        case BLADEMASTER
            return blademaster_id
        case WARDEN
            return warden_id
        case HOLY_LIGHT
            return holy_light_id
        case BLIZZARD
            return blizzard_id
        case WATER_ELEMENTAL
            return water_elemental_id
        case OK
            return ok_id
    return -1

abstract class Callback
    use LinkedListModule
    abstract function onClickCallback(Button b, player p)

public class Button
    unit dummy
    destructable icon
    image overlay
    vec3 pos
    boolean filter = false

    construct(integer btn, vec3 pos)
        onInit(btn, pos)

	construct(buttonTypes btn, vec3 pos)
		onInit(btn.getType(), pos)

    function onInit(integer btn, vec3 pos)
        this.pos = pos
        destructable d = CreateDestructableZ('OTip', pos.x, pos.y, pos.z, 0.00, 1, 0)
        icon = createDestructable(btn, pos, angle(0), 1, 1)
        d.remove()
        dummy = createUnit(players[0], detector, vec3(pos.x + 16, pos.y + 16, pos.z), angle(0))
        hash.put(dummy, this)

    function addOverlay()
        if filter == false
            overlay = createImage("bg.tga", pos.toVec2(), 64, 64)
            ..setColor(colorA(255, 255, 255, 150))
            ..setHeight(this.pos.z + 10.)
            ..show()
            filter = true

    function removeOverlay()
        overlay.remove()
        filter = false

    function hasOverlay() returns boolean
        return filter

    static function registerOnClick(Callback c)

    ondestroy
        dummy.setTimedLife(0.01)
        icon.remove()
        hash.remove(dummy)

    function onClick(player p)
        Callback c = Callback.getFirst()
        while c != null
            c.onClickCallback(this, p)
            c = c.next