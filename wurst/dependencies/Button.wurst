package Button

import Generate
import HashMap
import LinkedListModule

public HashMap<unit, Button> hash = new HashMap<unit, Button>()

public enum buttonTypes
    BLOOD_MAGE
    PALADIN
    BLADEMASTER
    WARDEN
    HOLY_LIGHT

public function buttonTypes.getType() returns integer
    switch this
        case BLOOD_MAGE
            return bloodmage_id
        case PALADIN
            return paladin_id
        case BLADEMASTER
            return blademaster_id
        case WARDEN
            return warden_id
        case HOLY_LIGHT
            return holy_light_id
    return -1

public interface iCallback
    use LinkedListModule
    abstract function onClickCallback(Button b)

abstract class Callback implements iCallback
    use LinkedListModule
    abstract override function onClickCallback(Button b)

public class Button
    unit dummy
    destructable icon

    construct(integer btn, vec3 pos)
        onInit(btn, pos)

	construct(buttonTypes btn, vec3 pos)
		onInit(btn.getType(), pos)

    function onInit(integer btn, vec3 pos)
        destructable d = CreateDestructableZ('OTip', pos.x, pos.y, pos.z, 0.00, 1, 0)
		icon = createDestructable(btn, pos, angle(0), 1, 1)
        d.remove()
        dummy = createUnit(players[0], detector, vec3(pos.x + 16, pos.y + 16, pos.z), angle(0))
        hash.put(dummy, this)

    static function registerOnClick(Callback c)

    ondestroy
        dummy.setTimedLife(0.01)
        icon.remove()
        hash.remove(dummy)

    function onClick()
        Callback c = Callback.getFirst()
        while c != null
            c.onClickCallback(this)
            c = c.next