package Ui

import public ButtonEx
import HashMap
import Grid
import LinkedList

constant real height = 350

// Layout is sorted by BTN type
enum btn
	HERO
	ABILITY
	UI

public class UI
	static Comparator <int>              btnComparator

	private HashMap   <integer, integer> ids
	private HashMap   <integer, btn>     btnType
	private LinkedList<integer>          buttons
	Grid grid

	private integer h_size = 0
	private integer a_size = 0
	private integer u_size = 0
	boolean sort           = true

	construct()
		ids     = new HashMap<integer, integer>()
		btnType = new HashMap<integer, btn>()
		
		buttons = new LinkedList<integer>()

		btnComparator = (i1, i2) ->
			return (btnType.get(i1) castTo int) - (btnType.get(i2) castTo int)

	private function store(btn b, integer dest, integer id)
		btnType.put(dest, b)
		buttons.push(dest)
		if id != -1
			ids.put(dest, id)
		
	private function store(btn b, integer dest)
		store(b, dest, -1)

	function addHeroIcon(buttonTypes bt, integer u)
		integer id = bt.getType()
		store(btn.HERO, id, u)
		h_size++

	function addAbilityIcon(buttonTypes bt, integer a)
		integer id = bt.getType()
		store(btn.ABILITY, id, a)
		a_size++

	function addUIIcon(buttonTypes bt)
		integer id = bt.getType()
		store(btn.UI, id)
		u_size++

	private function getCol(integer index) returns Col
		integer total = index
		integer i = 0
		for row in grid.rows
			if row.cols.size() > total
				return row.cols.get(total)
			else
				total -= row.cols.size()
			i++
		return null

	function render()
		if(grid != null)
			destroy grid
		grid = new Grid(vec2(0, 0), height)
		..addRow(h_size, true)	
		..addRow(a_size)
		..addRow(u_size, true)
		..prep()

		if sort
			buttons.sortWith(btnComparator)

		integer index = 0
		for id in buttons
			vec2 pos = getCol(index).pos
			switch btnType.get(id)
				case HERO
					new HeroButton(id, vec3(pos.x, pos.y, height), ids.get(id))
				case ABILITY
					new AbilityButton(id, vec3(pos.x, pos.y, height), ids.get(id))
				case UI
					new UIButton(id, vec3(pos.x, pos.y, height))

			index++

	ondestroy
		destroy grid